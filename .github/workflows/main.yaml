name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  lint-and-build:
    name: Run eslint, build and test
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://luna:a@postgres:5432/luna?schema=public
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: luna
          POSTGRES_PASSWORD: a
          POSTGRES_DB: luna
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    container:
      image: node
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0-rc.7
          run_install: true
      - name: create env file
        run: echo DATABASE_URL=${{ env.DATABASE_URL }} >> .env
      - name: migrate
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: prisma migrate deploy
      - name: Lint
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: lint
      - name: Prisma generate
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: prisma generate
      - name: seed
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: seed
      - name: Test
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: test
      - name: Build
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: build
  build:
    name: Build and push docker container
    runs-on: ubuntu-latest
    needs: lint-and-build
    steps:
      - uses: actions/checkout@v2
      - name: Login to github docker
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.PACKAGES_TOKEN }}
      - name: Build docker image
        run: docker build -t ${{ github.event.repository.name }} .
      - name: Docker tag
        run: docker tag ${{ github.event.repository.name }} ghcr.io/itweeno/${{ github.event.repository.name }}:latest
      - name: Push docker image
        run: docker push ghcr.io/itweeno/${{ github.event.repository.name }}:latest
  # deploy:
  #   name: Deploy to kubernetes
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create Kube Config File
  #       run: echo $KUBE_CONFIG | base64 --decode > $GITHUB_WORKSPACE/.kubeconfig
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #     - name: Install helm
  #       run: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
  #     - name: Update deployment
  #       run: helm upgrade ${{ github.event.repository.name }} ./chart --install --atomic --namespace luna --timeout 2m --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig --set-string sha=${{ github.sha }} --set-string webserver.port="${{ secrets.WEBSERVER_PORT }}" --set-string webserver.adress="${{ secrets.WEBSERVER_ADRESS }}" --set-string postgres.url="${{ secrets.POSTGRES_URL }}"
